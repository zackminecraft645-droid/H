local ProximityPromptService = game:GetService("ProximityPromptService")

-------------------------------------------------
--// HITBOX EXPANDER
-------------------------------------------------
local cycleSizes = {5, 10, 15, 20, 0} -- 0 = Off
local currentIndex = 1
local targetSize = cycleSizes[currentIndex]

local ScreenGui = Instance.new("ScreenGui")
local Button = Instance.new("TextButton")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

Button.Size = UDim2.new(0, 100, 0, 30)
Button.Position = UDim2.new(0.5, -50, 0, 100)
Button.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
Button.Text = "Hitbox: " .. targetSize
Button.TextColor3 = Color3.fromRGB(0, 0, 0)
Button.Parent = ScreenGui
Button.Active = true
Button.Draggable = true

local function updateHitboxes()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local char = player.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then
				if targetSize > 0 then
					hrp.Size = Vector3.new(targetSize, targetSize, targetSize)
					hrp.Transparency = 0.7
					hrp.BrickColor = BrickColor.new("Really red")
					hrp.Material = Enum.Material.Neon
					hrp.CanCollide = false
				else
					hrp.Size = Vector3.new(2, 2, 1)
					hrp.Transparency = 1
				end
			end
		end
	end
end

Button.MouseButton1Click:Connect(function()
	currentIndex = (currentIndex % #cycleSizes) + 1
	targetSize = cycleSizes[currentIndex]
	Button.Text = "Hitbox: " .. targetSize
	updateHitboxes()
end)

Players.PlayerAdded:Connect(function(player)
	player.CharacterAdded:Connect(function()
		task.wait(1)
		updateHitboxes()
	end)
end)

task.spawn(function()
	while task.wait(0.5) do
		updateHitboxes()
	end
end)

-------------------------------------------------
--// REMOVE NOCLIP DETECTOR
-------------------------------------------------
local noclipDetector = workspace.Players.zacknew28.NoclipDetector
if noclipDetector then
    noclipDetector:Destroy()
    print("NoclipDetector destroyed successfully")
end

-- Method 2: Disable by setting Enabled to false (if it has this property)
local noclipDetector = workspace.Players.zacknew28.NoclipDetector
if noclipDetector then
    if noclipDetector.Enabled ~= nil then
        noclipDetector.Enabled = false
        print("NoclipDetector disabled")
    else
        print("NoclipDetector doesn't have Enabled property")
    end
end

-- Method 3: Move it somewhere else (effectively removing from active area)
local noclipDetector = workspace.Players.zacknew28.NoclipDetector
if noclipDetector then
    noclipDetector.Parent = nil  -- Removes from workspace
    print("NoclipDetector removed from workspace")
end

-- Method 4: Comprehensive removal with error handling
local function disableNoclipDetector()
    local success, error = pcall(function()
        local player = workspace.Players:FindFirstChild("zacknew28")
        if player then
            local detector = player:FindFirstChild("NoclipDetector")
            if detector then
                -- Try multiple methods
                if detector.Enabled ~= nil then
                    detector.Enabled = false
                end
                detector:Destroy()
                return true
            else
                warn("NoclipDetector not found")
                return false
            end
        else
            warn("Player zacknew28 not found in workspace")
            return false
        end
    end)
    
    if success then
        print("NoclipDetector successfully disabled/removed")
    else
        warn("Error disabling NoclipDetector: " .. tostring(error))
    end
end) 

-- Call the function
disableNoclipDetector()

-- Method 5: Continuous monitoring and removal (if it respawns)
local function continuousRemoval()
    while true do
        local detector = workspace.Players:FindFirstChild("zacknew28")
        if detector then
            detector = detector:FindFirstChild("NoclipDetector")
            if detector then
                detector:Destroy()
                print("NoclipDetector removed - " .. os.time())
            end
        end
        wait(1) -- Check every second
    end
end

-------------------------------------------------
--// AUTO CASH COLLECT
-------------------------------------------------
local function triggerPrompt(prompt)
	if string.find(prompt.Parent.Name:lower(), "cash") then
		prompt.HoldDuration = 0
		task.spawn(function()
			fireproximityprompt(prompt)
		end)
	end
end

-- Scan existing prompts
for _, obj in ipairs(Workspace:GetDescendants()) do
	if obj:IsA("ProximityPrompt") then
		triggerPrompt(obj)
	end
end

-- Detect and trigger new prompts
Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("ProximityPrompt") then
		triggerPrompt(obj)
	end
end)
